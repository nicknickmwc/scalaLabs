[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Nikolai\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Nikolai\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_301)
[debug]       Load.loadUnit: plugins took 92.5057ms
[debug]       Load.loadUnit: defsScala took 0.2836ms
[debug] [Loading] Scanning directory C:\Users\Nikolai\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Nikolai\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.75 ms
[debug]           Load.resolveProject(global-plugins) took 42.9727ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Nikolai\.sbt\1.0\plugins, plugins: List(<none>))) took 80.602ms
[debug] [Loading] Done in C:\Users\Nikolai\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 101.8157ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2417ms
[debug]     Load.loadUnit(file:/C:/Users/Nikolai/.sbt/1.0/plugins/, ...) took 201.9851ms
[debug]   Load.apply: load took 343.9598ms
[debug]   Load.apply: resolveProjects took 5.7913ms
[debug]   Load.apply: finalTransforms took 49.6194ms
[debug]   Load.apply: config.delegates took 6.7565ms
[debug]   Load.apply: Def.make(settings)... took 342.9302ms
[debug]   Load.apply: structureIndex took 97.1482ms
[debug]   Load.apply: mkStreams took 2.0104ms
[info] loading global plugins from C:\Users\Nikolai\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2583.5262ms
[debug]           Load.loadUnit: plugins took 20.598ms
[debug]           Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234\project
[debug]             Load.loadUnit: mkEval took 6.8116ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4778 ms
[info] loading settings for project untitled1234-build from idea.sbt ...
[debug]               Load.resolveProject(untitled1234-build) took 3.0979ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled1234-build, base: C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234\project, plugins: List(<none>))) took 6.2279ms
[debug] [Loading] Done in C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234\project, returning: (untitled1234-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 124.9188ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.0037ms
[debug]         Load.loadUnit(file:/C:/Users/Nikolai/Desktop/ScalaLabs/untitled1234/project/, ...) took 150.4112ms
[debug]       Load.apply: load took 151.8084ms
[debug]       Load.apply: resolveProjects took 0.1003ms
[debug]       Load.apply: finalTransforms took 8.5532ms
[debug]       Load.apply: config.delegates took 0.3055ms
[debug]       Load.apply: Def.make(settings)... took 110.3092ms
[debug]       Load.apply: structureIndex took 29.0817ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 537.5506ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234
[debug]       Load.loadUnit: mkEval took 0.2803ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.6275 ms
[info] loading settings for project untitled1234 from build.sbt ...
[debug]         Load.resolveProject(untitled1234) took 25.5654ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled1234, base: C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234, plugins: List(<none>))) took 29.3048ms
[debug] [Loading] Done in C:\Users\Nikolai\Desktop\ScalaLabs\untitled1234, returning: (untitled1234)
[debug]     Load.loadUnit: loadedProjectsRaw took 59.6113ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.6556ms
[debug]   Load.loadUnit(file:/C:/Users/Nikolai/Desktop/ScalaLabs/untitled1234/, ...) took 600.4409ms
[debug] Load.apply: load took 602.069ms
[debug] Load.apply: resolveProjects took 0.0964ms
[debug] Load.apply: finalTransforms took 20.2633ms
[debug] Load.apply: config.delegates took 0.3887ms
[debug] Load.apply: Def.make(settings)... took 57.0869ms
[debug] Load.apply: structureIndex took 23.5066ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to untitled1234 (in build file:/C:/Users/Nikolai/Desktop/ScalaLabs/untitled1234/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58470 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58470, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled1234 (in build file:/C:/Users/Nikolai/Desktop/ScalaLabs/untitled1234/)
[debug] > Exec(idea-shell, None, None)
